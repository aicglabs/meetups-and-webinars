---------------------------------------------------
-- AICG COVID-19 Access / Security Configuration
---------------------------------------------------
-- change role to securityadmin for user / role steps
use role securityadmin;

//GRANT USAGE ON DATABASE "STARSCHEMA_COVID19" TO ROLE DATALAKEHOUSE_ROLE;
-- if trying the USAGE on Database on a marketplace database this error occurs...
-- SQL compilation error: Granting individual privileges on imported database is not allowed. Use 'GRANT IMPORTED PRIVILEGES' instead.

GRANT IMPORTED PRIVILEGES ON DATABASE "STARSCHEMA_COVID19" TO ROLE DATALAKEHOUSE_ROLE;
---------------------------------------------------


--+-----------------------------------------------------------------------------------------------+--
--+-----------------------------------------------------------------------------------------------+--
-- <Webinar SQL>
-- <Getting Started with Snowflake Data Marketplace>
-- <May 14, 2020 | 10:00am PST>
-- <SQL File | David A Spezia>
-- <Sales Engineer | Snowflake>
--+-----------------------------------------------------------------------------------------------+--
--+-----------------------------------------------------------------------------------------------+--
USE ROLE DATALAKEHOUSE_ROLE;
USE WAREHOUSE DATALAKEHOUSE_WH;
USE DATABASE STARSCHEMA_COVID19;
USE SCHEMA PUBLIC;

DESC TABLE JHU_COVID_19;

--WHO_SITUATION_REPORTS
SELECT
    COLUMN_NAME,
    DATA_TYPE,
    COMMENT
FROM
    STARSCHEMA_COVID19.INFORMATION_SCHEMA.COLUMNS
WHERE
    TABLE_NAME='WHO_SITUATION_REPORTS';

SELECT * FROM STARSCHEMA_COVID19.PUBLIC.WHO_SITUATION_REPORTS LIMIT 10;

--JHU_COVID_19
SELECT
    COLUMN_NAME,
    DATA_TYPE,
    COMMENT
FROM
    STARSCHEMA_COVID19.INFORMATION_SCHEMA.COLUMNS
WHERE
    TABLE_NAME = 'JHU_COVID_19';

SELECT * FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 LIMIT 10;


-- Changes in Buyer Behavior
SELECT DATE,
       COUNTRY_REGION,
       PROVINCE_STATE,
       GROCERY_AND_PHARMACY_CHANGE_PERC,
       PARKS_CHANGE_PERC,
       RESIDENTIAL_CHANGE_PERC,
       RETAIL_AND_RECREATION_CHANGE_PERC,
       TRANSIT_STATIONS_CHANGE_PERC,
       WORKPLACES_CHANGE_PERC
FROM   GOOG_GLOBAL_MOBILITY_REPORT
WHERE  COUNTRY_REGION = 'United States'
  AND PROVINCE_STATE = 'North Carolina'
  AND DATE BETWEEN TO_DATE('2021-04-01') AND TO_DATE('2021-04-20')
//  AND SUB_REGION_2 = 'Charlotte';
;
  
-- Cases fatality ration for a given date
SELECT m.COUNTRY_REGION, m.DATE, m.CASES, m.DEATHS, m.DEATHS / m.CASES as CFR
FROM (SELECT COUNTRY_REGION, DATE, AVG(CASES) AS CASES, AVG(DEATHS) AS DEATHS
      FROM ECDC_GLOBAL
      GROUP BY COUNTRY_REGION, DATE) m
WHERE m.CASES > 0 
AND COUNTRY_REGION = 'United States'
;




--CASES VS DIFFERNCE
SELECT SUM(CASES), CASE_TYPE, COUNTRY_REGION FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 WHERE DATE<=TO_DATE('5/13/2020') AND COUNTRY_REGION='United States' GROUP BY COUNTRY_REGION, CASE_TYPE;

SELECT SUM(DIFFERENCE), CASE_TYPE, COUNTRY_REGION FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 WHERE DATE<=TO_DATE('5/13/2020') AND COUNTRY_REGION='United States' GROUP BY COUNTRY_REGION, CASE_TYPE;

SELECT SUM(CASES), SUM(DIFFERENCE), CASE_TYPE, COUNTRY_REGION FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 WHERE DATE<=TO_DATE('5/13/2020') AND COUNTRY_REGION='United States' GROUP BY COUNTRY_REGION, CASE_TYPE;

--More Selects
SELECT COUNTRY_REGION, CASE_TYPE, DATE, RUNNING_SUM_COUNTRY FROM (
    SELECT COUNTRY_REGION, CASE_TYPE, DATE, SUM(DIFFERENCE) OVER(PARTITION BY COUNTRY_REGION, CASE_TYPE ORDER BY DATE) AS RUNNING_SUM_COUNTRY
    FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 WHERE COUNTRY_REGION='United States')
WHERE DATE>=TO_DATE('5/1/2020')
GROUP BY COUNTRY_REGION, CASE_TYPE, DATE, RUNNING_SUM_COUNTRY
ORDER BY COUNTRY_REGION, CASE_TYPE, DATE;

SELECT SUM(CASES), COUNTRY_REGION, DATE, CASE_TYPE FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 
WHERE COUNTRY_REGION IN('US','United States') AND DATE>TO_DATE('3/20/2020') GROUP BY COUNTRY_REGION, DATE, CASE_TYPE ORDER BY DATE DESC;

--Ingest
CREATE DATABASE STARSCHEMA_COVID19_WEBINAR;
USE SCHEMA PUBLIC;
CREATE OR REPLACE TABLE STARSCHEMA_COVID19_WEBINAR.PUBLIC.JHU_COVID_19 AS (SELECT * FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19);

--Variance Totals by Day for QA
SELECT COUNT(*) AS COUNT_OF_RECORDS_FOR_DATE, SUM(VARIANCE) AS SUM_OF_VARIANCE, DATE, HAS_VARIANCE FROM
(SELECT *, JHU_COVID_19_CASES-JHU_COVID_19_QA_CASES AS VARIANCE, JHU_COVID_19_CASES-JHU_COVID_19_QA_CASES<>0 AS HAS_VARIANCE FROM
(SELECT COUNTRY_REGION, DATE, CASE_TYPE, ZEROIFNULL("'STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19'") AS JHU_COVID_19_CASES, ZEROIFNULL("'STARSCHEMA_COVID19_WEBINAR.PUBLIC.JHU_COVID_19'") AS JHU_COVID_19_QA_CASES FROM
((SELECT SUM(CASES) AS CASES, COUNTRY_REGION, DATE, CASE_TYPE, 'STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19' AS TABLE_NAME FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19
GROUP BY COUNTRY_REGION, DATE, CASE_TYPE ORDER BY DATE DESC)
UNION
(SELECT SUM(CASES), COUNTRY_REGION, DATE, CASE_TYPE, 'STARSCHEMA_COVID19_WEBINAR.PUBLIC.JHU_COVID_19' AS TABLE_NAME FROM STARSCHEMA_COVID19_WEBINAR.PUBLIC.JHU_COVID_19
GROUP BY COUNTRY_REGION, DATE, CASE_TYPE ORDER BY DATE DESC)) unionSQL
PIVOT(SUM(UNIONSQL.CASES) FOR TABLE_NAME IN('STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19','STARSCHEMA_COVID19_WEBINAR.PUBLIC.JHU_COVID_19')) pivotSQL
) varianceSQL ORDER BY HAS_VARIANCE DESC, DATE DESC, COUNTRY_REGION DESC) aggregateSQL
GROUP BY DATE, HAS_VARIANCE ORDER BY HAS_VARIANCE DESC, DATE DESC;

--+-----------------------------------------------------------------------------------------------+--
-- SAFEGRAPH
--+-----------------------------------------------------------------------------------------------+--
-- FIPS code, https://en.wikipedia.org/wiki/Federal_Information_Processing_Standards
-- https://smartystreets.com/articles/county-fips-codes
-- Basically STATE(2) + COUNTY(3);
SELECT FIPS, PROVINCE_STATE, COUNTY FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 WHERE STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19.COUNTRY_REGION = 'United States' AND STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19.DATE = TO_DATE('2020-05-10');

SELECT * FROM SAFEGRAPH_SHARE.PUBLIC.METADATA_CBG_FIPS_CODES;

SELECT LEFT(CBG,5) AS FIPS, * FROM SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO ORDER BY 1;


--View
SELECT  JHU.FIPS, SUM(JHU.CASES) AS CONFIRMED_CASES, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, IFF(SUM(JHU.DIFFERENCE)>0,GEOSQL.COUNTY_POPULATION,0) AS AT_RISK FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = TO_DATE('2021-04-23') AND JHU.CASE_TYPE='Confirmed'
GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE
ORDER BY JHU.FIPS;

CREATE OR REPLACE VIEW VW_JHU_WITH_POPULATIONS AS (
  SELECT  JHU.FIPS, SUM(JHU.CASES) AS CONFIRMED_CASES, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, IFF(SUM(JHU.DIFFERENCE)>0,GEOSQL.COUNTY_POPULATION,0) AS AT_RISK FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = TO_DATE('2020-05-13') AND JHU.CASE_TYPE='Confirmed'
GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE
ORDER BY JHU.FIPS
);

--+-----------------------------------------------------------------------------------------------+--
-- WEATHER SOURCE
--+-----------------------------------------------------------------------------------------------+--
select count(*) from WEATHERSOURCE_PARTNER_WS_ONPOINT_WEATHER_DATA_SHARE.PUBLIC.HISTORY_DAY_COVID_19;

select * from WEATHERSOURCE_PARTNER_WS_ONPOINT_WEATHER_DATA_SHARE.PUBLIC.HISTORY_DAY_COVID_19 limit 10;

--Simple Test Query
select 
DATE_VALID_STD,
AVG(AVG_TEMPERATURE_AIR_2M_F)
from WEATHERSOURCE_PARTNER_WS_ONPOINT_WEATHER_DATA_SHARE.PUBLIC.HISTORY_DAY_COVID_19 
where COUNTRY = 'US' AND POSTAL_CODE LIKE '100%' 
group by DATE_VALID_STD
order by DATE_VALID_STD;

--Test Query with COVID Data 
select 
 DATE,
 COUNTY,
 CASES,
 CASES_SINCE_PREV_DAY
from STARSCHEMA_COVID19.PUBLIC.NYT_US_COVID19
where LOWER(COUNTY) = 'mecklenburg' AND STATE = 'North Carolina'
order by DATE;

--Joinng COVID Data with Weather Data
select w.date,w.avg_temp, c.county, c.cases, c.cases_since_prev_day
from (
      select  DATE_VALID_STD date, AVG(AVG_TEMPERATURE_AIR_2M_F) avg_temp
      from WEATHERSOURCE_PARTNER_WS_ONPOINT_WEATHER_DATA_SHARE.PUBLIC.HISTORY_DAY_COVID_19
      where COUNTRY = 'US' AND POSTAL_CODE LIKE '100%'
      group by DATE_VALID_STD
      order by DATE_VALID_STD
    ) w inner join (
        select
         DATE,
         COUNTY,
         CASES,
         CASES_SINCE_PREV_DAY
        from STARSCHEMA_COVID19.PUBLIC.NYT_US_COVID19
        where LOWER(COUNTY) = 'mecklenburg' AND STATE = 'North Carolina'
        order by DATE
      ) c on w.date=c.date;

create or replace view DEMO_DB.PUBLIC.VW_JHU_COVID_WITH_WEATHER as (
select w.date,w.avg_temp, c.county, c.cases, c.cases_since_prev_day
from (
      select  DATE_VALID_STD date, AVG(AVG_TEMPERATURE_AIR_2M_F) avg_temp
      from WEATHERSOURCE_PARTNER_WS_ONPOINT_WEATHER_DATA_SHARE.PUBLIC.HISTORY_DAY_COVID_19
      where COUNTRY = 'US' AND POSTAL_CODE LIKE '100%'
      group by DATE_VALID_STD
      order by DATE_VALID_STD
    ) w inner join (
        select
         DATE,
         COUNTY,
         CASES,
         CASES_SINCE_PREV_DAY
        from STARSCHEMA_COVID19.PUBLIC.NYT_US_COVID19
        where LOWER(COUNTY) = 'mecklenburg' AND STATE = 'North Carolina'
        order by DATE
      ) c on w.date=c.date
  WHERE c.date >= TO_DATE('2021-04-01')
);

SELECT * FROM DEMO_DB.PUBLIC.VW_JHU_COVID_WITH_WEATHER;
--+-----------------------------------------------------------------------------------------------+--
-- </Webinar SQL>
--+-----------------------------------------------------------------------------------------------+--
